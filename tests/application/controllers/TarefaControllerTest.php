<?php

require_once dirname(__FILE__) . '/../../../application/controllers/TarefaController.php';

/**
 * Classe de teste do TarefaController, essa classe possui métodos que realizam testes para validar
 * o funcionamento do TarefaController.
 * Generated by PHPUnit on 2012-07-10 at 02:21:57.
 * @author Luiz Daud
 * @version 0.1
 * @access public
 */
class TarefaControllerTest extends Zend_Test_PHPUnit_ControllerTestCase {

    /**
     * Funcao que inicializa todos os parametros necessarios para o correto
     * funcionamento dos testes, como conexões com o banco de dados e
     * variaveis de controle dos testes.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     *
     */
    protected function setUp() {
        // Assign and instantiate in one step:
        $this->bootstrap = new Zend_Application(
        APPLICATION_ENV,
        APPLICATION_PATH
           . '/configs/application.ini'
        );
        parent::setUp();
        Zend_Controller_Front::getInstance()->setParam('noErrorHandler',true)->throwExceptions(true); 
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

   /**
     * Função que verifica se o action init está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
    public function testInit() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        $this->assertController('Auth');
        $this->assertAction('login');        
        
        $this->dispatch('/tarefa/Init');
        $this->assertController('tarefa');
        $this->assertAction('Init');
    }

   /**
     * Função que verifica se o action create está sendo executado corretamente,
     * cria uma tarefa e verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testCreateAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        
         $this->dispatch('/Auth/login');
         $this->request->setMethod('POST')
              ->setPost(array(
                'dataInc'  => '25/07/2012',
                'dataFim' => '31/07/2012',
                'descricao'  => 'tarefa teste'
                ));
         
         $this->dispatch('/tarefa/create/idProj/4/idColab/2');
         $this->assertRedirectTo('/tarefa/prepara/idProj/4/flag/1');
         
         $select = $this->tarefa->select();
         $select->from($this->tarefa, 'descricao');
         $select->where('nome = ?', 'teste');
         
         if($this->tarefa->fetchRow($select)->descricao != null)
             assert(1);
         else
             assert(0);           
    }
/**
     * Função que verifica se o action edit está sendo executado corretamente,
     * cria uma tarefa, seleciona, edita e verifica se a operação foi concluida.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testEditAction() {
        //faz login
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        
         $this->dispatch('/Auth/login');
         //se o post
         $this->request->setMethod('POST')
              ->setPost(array(
                'dataInc'  => '25/07/2012',
                'dataFim' => '31/07/2012',
                'descricao'  => 'tarefa teste'
                ));
         //cria a tarefa
         $this->dispatch('/tarefa/create/idProj/4/idColab/2');
         //verifica se criou
         $this->assertRedirectTo('/tarefa/prepara/idProj/4/flag/1');
         
         $select = $this->tarefa->select();
         $select->from($this->tarefa, 'descricao');
         $select->where('nome = ?', 'tarefa teste');
         //seta o post de edição
         $this->request->setMethod('POST')
              ->setPost(array(
                'dataInc'  => '25/07/2012',
                'dataFim' => '31/07/2012',
                'descricao'  => 'tarefa teste editada',
                'estado_idestado' => 'Concluido',
                'dataEntrega'  => '31/07/2012'
                ));
          //edita
         $this->dispatch('/tarefa/edit/idTarefa/'+ $this->tarefa->fetchRow($select)->descricao +'/idColab/2/idProj/4');
         //verifica se editou
         $this->assertRedirectTo('/tarefa/prepara/idProj/4/flag/2');         
    }

     /**
     * Função que verifica se o action delete está sendo executado corretamente,
     * cria uma tarefa, logo após, deleta.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testDeleteAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        
         $this->dispatch('/Auth/login');
         $this->request->setMethod('POST')
              ->setPost(array(
                'dataInc'  => '25/07/2012',
                'dataFim' => '31/07/2012',
                'descricao'  => 'tarefa a ser deletada'
                ));
         
         $this->dispatch('/tarefa/create/idProj/4/idColab/2');
         $this->assertRedirectTo('/tarefa/prepara/idProj/4/flag/1');
         
         $select = $this->tarefa->select();
         $select->from($this->tarefa, 'descricao');
         $select->where('nome = ?', 'tarefa a ser deletada');
     
         $this->dispatch('/tarefa/delete/idTarefa/' + $this->tarefa->fetchRow($select)->descricao + 'idColab/2/idProjeto/4');
         $this->assertRedirectTo('/tarefa/prepara/idProj/4/flag/3');
    }

  /**
     * Função que verifica se o action prepara está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testPreparaAction() {
         $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        $this->assertController('Auth');
        $this->assertAction('login');        
        
        $this->dispatch('/tarefa/Prepara');
        $this->assertController('tarefa');
        $this->assertAction('Prepara');
    }

    /**
     * Função que verifica se o action minhastarefas está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testMinhasTarefasAction() {
      $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        $this->assertController('Auth');
        $this->assertAction('login');      
        
        $this->dispatch('/Tarefa/MinhasTarefas');
        $this->assertController('Tarefa');
        $this->assertAction('MinhasTarefas');
    }

}

?>
