<?php

require_once dirname(__FILE__) . '/../../../application/controllers/FilialController.php';

/**
 * Classe de teste do FilialController, essa classe possui métodos que realizam testes para validar
 * o funcionamento do FilialController.
 * Generated by PHPUnit on 2012-07-10 at 02:21:57.
 * @author Luiz Daud
 * @version 0.1
 * @access public
 */
class FilialControllerTest extends Zend_Test_PHPUnit_ControllerTestCase {
    /**
     * Funcao que inicializa todos os parametros necessarios para o correto
     * funcionamento dos testes, como conexões com o banco de dados e
     * variaveis de controle dos testes.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     *
     */
    protected function setUp() {
        // Assign and instantiate in one step:
        $this->bootstrap = new Zend_Application(
        APPLICATION_ENV,
        APPLICATION_PATH
           . '/configs/application.ini'
        );
        parent::setUp();
        
        //inicializa tabelas do banco
        
        $this->funcionario = new Model_DbTable_Func();
        $this->filial = new Model_DbTable_Filial();
        $this->colaboradores = new Model_DbTable_Colaboradores();
        $this->projeto = new Model_DbTable_Proj();
        Zend_Controller_Front::getInstance()->setParam('noErrorHandler',true)->throwExceptions(true); 
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

     /**
     * Função que verifica se o action init está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
    public function testInit() {
        //faz login
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        //verifica os controllers
        $this->assertController('Auth');
        $this->assertAction('login');        
        //chama a init
        $this->dispatch('/filial/Init');
        //verifica se foi chamada corretamente
        $this->assertController('filial');
        $this->assertAction('Init');
    }

   /**
     * Função que verifica se o action index está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
    public function testIndexAction() {
        //faz login
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/filial/login');
        // verifica os controllers
        $this->assertController('filial');
        $this->assertAction('login');        
        // invoca o index
        $this->dispatch('/filial/index');
        //verifica se o index foi invocado corretamente
        $this->assertController('filial');
        $this->assertAction('index');
    }

     /**
     * Função que verifica se o action create está sendo executado corretamente,
     * cria um Filial num projeto e verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
    public function testCreateAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        
         $this->dispatch('/Auth/login');
         $this->request->setMethod('POST')
              ->setPost(array(
                'nome'  => 'SoftArms',
                'tel' => '7788998877',
                'endereco'  => 'rua dos carroceiros',
                'responsavel'  => 'ze das farinhas',
                'email'  => 'Farinhas@colombia.com',
                'cep' => '45999-140'
              ));
         
         $this->dispatch('/filial/create');
         $this->assertRedirectTo('/filial/index/flag/1');
                
    }
    
     /**
     * Função que verifica se o action Edit está sendo executado corretamente,
     * cria um Filial num projeto, edita e verifica se a operação foi concluida.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
     public function testEditAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        
         $this->dispatch('/Auth/login');
         $this->request->setMethod('POST')
              ->setPost(array(
                'nome'  => 'SoftArms',
                'tel' => '7788998877',
                'endereco'  => 'rua dos carroceiros',
                'responsavel'  => 'ze das farinhas',
                'email'  => 'Farinhas@colombia.com',
                'cep' => '45999-140'
              ));
         
         $this->dispatch('/filial/create');
         $this->assertRedirectTo('/filial/index/flag/1');
         
         $select = $this->filial->select();
         $select->from($this->filial, 'idempresaFilial');
         $select->where('nome = ?', 'SoftArms');
        
         $this->request->setMethod('POST')
              ->setPost(array(
                'nome'  => 'SoftBrArms',
                'tel' => '7788998877',
                'endereco'  => 'rua dos carroceiros',
                'responsavel'  => 'ze das farinhas',
                'email'  => 'Farinhas@brasil.com',
                'cep' => '45999-140'
              ));
         
         $this->dispatch('filial/edit/id/' + $this->filial->fetchRow($select)->idempresaFilial );
         $this->assertRedirectTo('/filial/index/flag/2'); 
         
                
    }
    
     /**
     * Função que verifica se o action delete está sendo executado corretamente,
     * cria um Filial num projeto, deleta e  verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
    
     public function testDeleteAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        
         $this->dispatch('/Auth/login');
         $this->request->setMethod('POST')
              ->setPost(array(
                'nome'  => 'SoftArms',
                'tel' => '7788998877',
                'endereco'  => 'rua dos carroceiros',
                'responsavel'  => 'ze das farinhas',
                'email'  => 'Farinhas@colombia.com',
                'cep' => '45999-140'
              ));
         
         $this->dispatch('/filial/create');
         $this->assertRedirectTo('/filial/index/flag/1');
                
        $select = $this->filial->select();
        $select->from($this->filial, 'idempresaFilial');
        $select->where('nome = ?', 'SoftArms');
        
        $this->dispatch('filial/delete/id/' + $this->filial->fetchRow($select)->idempresaFilial );
        $this->assertRedirectTo('/filial/index/flag/3'); 
         
    }

    
    
}

?>
