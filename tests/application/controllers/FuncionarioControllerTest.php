<?php

require_once dirname(__FILE__) . '/../../../application/controllers/FuncionarioController.php';

/**
 * Classe de teste do FuncionarioController, essa classe possui métodos que realizam testes para validar
 * o funcionamento do FuncionarioController.
 * Generated by PHPUnit on 2012-07-10 at 02:21:57.
 * @author Luiz Daud
 * @version 0.1
 * @access public
 */
class FuncionarioControllerTest extends Zend_Test_PHPUnit_ControllerTestCase {
    
    /**
     * Funcao que inicializa todos os parametros necessarios para o correto
     * funcionamento dos testes, como conexões com o banco de dados e
     * variaveis de controle dos testes.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     *
     */
    
    protected function setUp() {
        // Assign and instantiate in one step:
        $this->bootstrap = new Zend_Application(
        APPLICATION_ENV,
        APPLICATION_PATH
           . '/configs/application.ini'
        );
        parent::setUp();
        
        Zend_Controller_Front::getInstance()->setParam('noErrorHandler',true)->throwExceptions(true); 
        
        //inicializa as tabelas do DB
        
        $this->funcionario = new Model_DbTable_Func();
        $this->filial = new Model_DbTable_Filial();
        $this->colaboradores = new Model_DbTable_Colaboradores();
        $this->projeto = new Model_DbTable_Proj();
        $this->userGit = new Model_DbTable_UserGit();
        $this->userBug = new Model_DbTable_UserBugzilla();
        $this->redefinir = new Model_DbTable_RedefinirSenha();    
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    
public function existeLogin($login)
    {
        $select = $this->select();
        $select->from($this->_name, 'COUNT(*) AS num')
               ->where('login = ?', $login);

        return ($this->fetchRow($select)->num == 0) ? false : true;
    }

    
    public function existeDoc($doc)
    {
        $select = $this->select();
        $select->from($this->_name, 'COUNT(*) AS num')
               ->where('documentoIdentificacao = ?', $doc);

        return ($this->fetchRow($select)->num == 0) ? false : true;
    }
    /**
     * Função que verifica se o action init está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testInit() {
        //faz login
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        //checa os controllers
        $this->assertController('Auth');
        $this->assertAction('login');      
        //vai pro init
        $this->dispatch('/Funcionario/Init');
        //checa se foi
        $this->assertController('Funcionario');
        $this->assertAction('Init');
    }

     /**
     * Função que verifica se o action index está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
    public function testIndexAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        $this->assertController('Auth');
        $this->assertAction('login');      
        
        $this->dispatch('/Funcionario/Index');
        $this->assertController('Funcionario');
        $this->assertAction('Index');
    }

     /**
     * Função que verifica se o action create está sendo executado corretamente,
     * cria um funcionario e verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    
    public function testCreateAction() {
               
        //faz login
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        //seta o post
        $this->request->setMethod('POST')
              ->setPost(array(
                        'nome'  => 'manolo das dorgas',
                        'documentoIdentificacao'  => '123321',
                        'login' => 'manolo',
                        'senha'  => sha1('123'),
                        'email'  => 'manolo@dorgas.com',
                        'empresaFilial_idempresaFilial' => '2',
                        'foto' => '/images/fotosFunc/usuarioPadrao.jpg'
                    ));
        //cria o funcionario e verifica se foi criado
        $this->dispatch('/funcionario/create');
        $this->assertRedirectTo('/funcionario/index/flag/1');
        //
        //
        // busca um funcionario no banco, e verifica a existencia dele
        $select = $this->funcionario->select();
        $select->from($this->funcionario, 'nome');
        $select->where('nome = ?', 'manolo das dorgas');
        //verifica se o funcionario foi encontrado e confirma se sim e fala se não   
        if($this->funcionario->fetchRow($select)->nome == 'manolo das dorgas'){
          assert(1);
      }
      else
          assert(0);    
    }

  /**
     * Função que verifica se o action edit está sendo executado corretamente,
     * seleciona, edita e verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testEditAction() {
      //faz o login
      $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
      $this->dispatch('/auth/login');  
      //busca o funcionario
      $select = $this->funcionario->select();
      $select->from($this->funcionario, 'idfuncionario');
      $select->where('nome = ?', 'teste');
      //seta o post
      $this->request->setMethod('POST')
              ->setPost(array(
                  'nome'  => 'teste',
                  'email'  => 'teste@teste.com',
              ));
      //deflagra o edit e verifica se ocorreu
      $this->dispatch('/funcionario/edit/id23');
      $this->assertRedirectTo('/funcionario/index/flag/2');
    }

   /**
     * Função que verifica se o action delete está sendo executado corretamente,
     * cria um funcionário, logo após, deleta.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testDeleteAction() {
    	unset($_POST);
        //faz login
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
              unset($_POST);
      //seta o post
       $this->request->setMethod('POST')
              ->setPost(array(
                        'nome'  => 'delete',
                        'documentoIdentificacao'  => 'delete',
                        'login' => 'delete',
                        'senha'  => sha1('delete'),
                        'email'  => 'delete@delete.com',
                        'empresaFilial_idempresaFilial' => '2',
                        'foto' => '/images/fotosFunc/usuarioPadrao.jpg'
                    ));
      
      //cria um funcionario pra ser deletado 
      $this->dispatch('/funcionario/create');
      $this->assertRedirectTo('/funcionario/index/flag/1');
      unset($_POST);
      
      //busca a id do funcinario criado
      
      $select = $this->funcionario->select();
      $select->from($this->funcionario, 'idfuncionario');
      $select->where('nome = ?', 'delete');
      //deleta o funcinario usando a id e verifica se foi deletado 
      $this->dispatch('/funcionario/delete/id/' + $this->funcionario->fetchRow($select)->idfuncionario );
      $this->assertRedirectTo('/funcionario/index/flag/3');     
    }

    
    /**
     * Função que verifica se o action indexemp está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testIndexempAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        $this->assertController('Auth');
        $this->assertAction('login');        
        
        $this->dispatch('/Funcionario/Indexemp');
        $this->assertController('Funcionario');
        $this->assertAction('Indexemp');
        $this->assertNotRedirect();
    }


    /**
     * Função que verifica se o action createemp está sendo executado corretamente,
     * cria um funcionario e verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testCreateempAction() {
        //faz login
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '12344'
              ));
        $this->dispatch('/Auth/login');
        //seta o post
        $this->request->setMethod('POST')
              ->setPost(array(
                        'nome'  => 'manolo das farinha',
                        'documentoIdentificacao'  => '987321',
                        'login' => 'manolo',
                        'senha'  => sha1('123'),
                        'email'  => 'manolo@dorgas.com',
                        'empresaFilial_idempresaFilial' => '2',
                        'foto' => '/images/fotosFunc/usuarioPadrao.jpg'
                    ));
        //cria o funcionario e verifica se foi criado
        $this->dispatch('/funcionario/create');
        $this->assertRedirectTo('/funcionario/indexemp/flag/1');
        //
        //
        // busca um funcionario no banco, e verifica a existencia dele
        $select = $this->funcionario->select();
        $select->from($this->funcionario, 'nome');
        $select->where('nome = ?', 'manolo das farinha');
        //verifica se o funcionario foi encontrado e confirma se sim e fala se não   
        if($this->funcionario->fetchRow($select)->nome == 'manolo das farinha'){
          assert(1);
      }
      else
          assert(0);    
    }

   /**
     * Função que verifica se o action editemp está sendo executado corretamente,
     * seleciona, edita e verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testEditempAction() {
        //faz o login
      $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
      $this->dispatch('/auth/login');  
      //busca o funcionario
      $select = $this->funcionario->select();
      $select->from($this->funcionario, 'idfuncionario');
      $select->where('nome = ?', 'teste');
      //seta o post
      $this->request->setMethod('POST')
              ->setPost(array(
                  'nome'  => 'testeEdit',
                  'email'  => 'testeEdit@teste.com',
              ));
      //deflagra o edit e verifica se ocorreu
      $this->dispatch('/funcionario/edit/id23');
      $this->assertRedirectTo('/funcionario/indexemp/flag/2');
    }    
}