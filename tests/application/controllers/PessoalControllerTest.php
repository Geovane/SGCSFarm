<?php

require_once dirname(__FILE__) . '/../../../application/controllers/PessoalController.php';

/**
 * Classe de teste do PessoalController, essa classe possui métodos que realizam testes para validar
 * o funcionamento do PessoalController.
 * Generated by PHPUnit on 2012-07-10 at 02:21:57.
 * @author Luiz Daud
 * @version 0.1
 * @access public
 */
class PessoalControllerTest extends Zend_Test_PHPUnit_ControllerTestCase {

     /**
     * Funcao que inicializa todos os parametros necessarios para o correto
     * funcionamento dos testes, como conexões com o banco de dados e
     * variaveis de controle dos testes.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     *
     */
    protected function setUp() {
        // Assign and instantiate in one step:
        $this->bootstrap = new Zend_Application(
        APPLICATION_ENV,
        APPLICATION_PATH
           . '/configs/application.ini'
        );
        parent::setUp();
        Zend_Controller_Front::getInstance()->setParam('noErrorHandler',true)->throwExceptions(true); 
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

     /**
     * Função que verifica se o action init está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testInit() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        $this->assertController('Auth');
        $this->assertAction('login');      
        
        $this->dispatch('/Auth/Init');
        $this->assertController('Auth');
        $this->assertAction('Init');
    }

    /**
     * Função que verifica se o action edit está sendo executado corretamente,
     * seleciona um funcionairo, edita e verifica se a operação foi concluida
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testEditAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');        
        
        $this->request->setMethod('POST')
              ->setPost(array(
                  'nome' => 'Geovane Mimoso',
                  'doc' => '987654',
                  'login' => 'mimoso',
                  'email' => 'mimoso@softfarm.com'
              ));
        $this->dispatch('/pessoal/edit');
        $this->assertController('pessoal');
        $this->assertAction('edit');
        $this->assertRedirectTo('/pessoal/meusdados/flag/1');
    }

     /**
     * Função que verifica se o action Imagem está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testImagemAction() {
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        $this->assertController('Auth');
        $this->assertAction('login');        
        
        $this->dispatch('/pessoal/imagem');
        $this->assertController('pessoal');
        $this->assertAction('imagem');
    }

    /**
     * Função que verifica se o action MeusDados está sendo alcançado corretamente.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testMeusdadosAction() {
        // Remove the following lines when you implement this test.
        $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login', 'login');       
        $this->dispatch('/pessoal/meusdados');
        $this->assertController('pessoal');
        $this->assertAction('meusdados');
    }

     /**
     * Função que verifica se o action senha está sendo alcançado corretamente
     * e permite que o usuario troque a senha, loga, e troca a senha
     * depois verifica se foi trocada.
     *
     * @author Luiz Daud
     * @access public
     * @return void
     */
    public function testSenhaAction() {
       $this->request->setMethod('POST')
              ->setPost(array(
                  'login' => 'mimoso',
                  'senha' => '1234'
              ));
        $this->dispatch('/Auth/login');
        
        $this->request->setMethod('POST')
              ->setPost(array(
                  'senhaAtual' => '1234',
                  'senhaNova' => '1234',
                  'senhaNova2' => '1234',             
              ));
        $this->dispatch('/pessoal/senha');
        $this->assertController('pessoal');
        $this->assertAction('senha');
        $this->assertRedirectTo('/pessoal/meusdados/flag/3');
        }
        
}

?>
